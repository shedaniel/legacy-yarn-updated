plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version("1.3.71")
    id("maven-publish")
}

sourceCompatibility = targetCompatibility = 1.8

group "me.shedaniel"
version = "${project.targetVersion}+legacy.${project.legacyVersion}" + project.extraFixes
archivesBaseName = project.name

repositories {
    mavenCentral()
    maven { url "https://maven.fabricmc.net" }
    maven { url "https://jitpack.io" }
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.71")
    compile("net.fabricmc:stitch:0.4.6+build.74:all")
}

task runWithPolicy(type: JavaExec, dependsOn: build) {
    main "me.shedaniel.legacyyarnupdated.LegacyYarnUpdatedKt"
    classpath jar.archiveFile
    args project.targetVersion, project.legacyVersion, file("${project.buildDir}/libs/yarn-${project.version}-v2.jar").absolutePath
}

task genPolicy(type: JavaExec, dependsOn: build) {
    main "me.shedaniel.legacyyarnupdated.LegacyYarnUpdatedKt"
    classpath jar.archiveFile
    args project.targetVersion, project.legacyVersion, file("${project.buildDir}/libs/yarn-${project.version}-v2.jar").absolutePath, "generatePolicy", file("keep.policy").absolutePath
}

jar {
    manifest {
        attributes(
                "Main-Class": "me.shedaniel.legacyyarnupdated.LegacyYarnUpdatedKt"
        )
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact(file("${project.buildDir}/libs/yarn-${project.version}-v2.jar")) {
                builtBy runWithPolicy
                classifier = "v2"
            }
            groupId "me.shedaniel"
            artifactId "legacy-yarn"
            version = project.version
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "https://deploy.shedaniel.me/"
                credentials {
                    username = "shedaniel"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}